<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <decisions>
        <name>Decision_Case_Found</name>
        <label>Decision Case Found</label>
        <locationX>690</locationX>
        <locationY>568</locationY>
        <defaultConnector>
            <targetReference>Update_Latest_Case_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contact</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Latest_Case_Email</targetReference>
            </connector>
            <label>No</label>
        </rules>
        <rules>
            <name>Pending_Customer</name>
            <conditionLogic>(1 OR 2 OR 3) and 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Customer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending BE</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ToAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>techsandbox@automationdirect.com</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Status_On_Case</targetReference>
            </connector>
            <label>Pending Customer</label>
        </rules>
    </decisions>
    <description>Added update for Tech Support - Pending Tech</description>
    <environments>Default</environments>
    <formulas>
        <name>TruncatedEmailBody</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Record.TextBody},2000)</expression>
    </formulas>
    <formulas>
        <name>TruncatedSubject</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Record.Subject},80)</expression>
    </formulas>
    <interviewLabel>Case Contact Population {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Email Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>782</locationX>
        <locationY>381</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Case_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ContactId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Contact</name>
        <label>Get Contact</label>
        <locationX>814</locationX>
        <locationY>649</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.FromAddress</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <sortField>Id</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>814</locationX>
        <locationY>855</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>Get_Contact.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Latest_Email_Description__c</field>
            <value>
                <elementReference>TruncatedEmailBody</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Latest_Email_Subject__c</field>
            <value>
                <elementReference>TruncatedSubject</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Latest_Case_Email</name>
        <label>Update Latest Case Email</label>
        <locationX>1118</locationX>
        <locationY>618</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RelatedToId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Latest_Email_Description__c</field>
            <value>
                <elementReference>TruncatedEmailBody</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Latest_Email_Subject__c</field>
            <value>
                <elementReference>TruncatedSubject</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Status_On_Case</name>
        <label>Update Status On Case</label>
        <locationX>591</locationX>
        <locationY>666</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Pending Tech</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>657</locationX>
        <locationY>36</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
        <filterLogic>(1 AND 2 AND 3) OR 4</filterLogic>
        <filters>
            <field>RelatedToId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RelatedToId</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>500</stringValue>
            </value>
        </filters>
        <filters>
            <field>Incoming</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ToAddress</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>techsandbox@automationdirect.com</stringValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
